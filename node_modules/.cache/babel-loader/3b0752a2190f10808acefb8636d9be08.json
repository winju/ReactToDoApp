{"ast":null,"code":"var _jsxFileName = \"D:\\\\PracticeProject\\\\ToDoManagement_APP(ReactJS&SpringBoot)\\\\todomanagement-app\\\\src\\\\components\\\\todo\\\\ToDoApp.jsx\";\nimport React, { Component } from 'react';\n\nclass TodoApp extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ToDoApp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, React.createElement(LoginComponent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeHandler = event => {\n      // console.log(this.state);\n      // const typeOfField = event.target.name;\n      this.setState({\n        [event.target.name]: event.target.value // the form element name(event.target.name) should match state elemet name\n\n      });\n    };\n\n    this.loginClicked = () => {\n      if (this.state.username === 'winju' && this.state.password === 'abc') {\n        this.setState({\n          login: true\n        });\n      } else {\n        this.setState({\n          login: false\n        });\n      }\n\n      console.log('In loginchecked ', this.state.login);\n    };\n\n    this.state = {\n      username: 'winju',\n      password: '',\n      login: \"cgfdg\"\n    };\n  } // usernameChangeHandler = (event)=>{\n  //     console.log(event.target.value);\n  //     this.setState({\n  //         username : event.target.value\n  //     })\n  // }\n  // passwordChangeHandler = (event)=>{\n  //     console.log(event.target.value);\n  //     this.setState({\n  //         password : event.target.value\n  //     })\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(CheckLoginSuccess, {\n      successcheck: this.state.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), \"Username:\", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), \"Password:\", React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.loginClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Login\"));\n  }\n\n} //Functional Component\n\n\nfunction CheckLoginSuccess(props) {\n  if (props.successcheck) {\n    console.log('In function component ', props.successcheck);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Logging In\");\n  } else {\n    console.log('In function component ', props.successcheck);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Invalid Credentials\");\n  }\n}\n\nexport default TodoApp;","map":{"version":3,"sources":["D:\\PracticeProject\\ToDoManagement_APP(ReactJS&SpringBoot)\\todomanagement-app\\src\\components\\todo\\ToDoApp.jsx"],"names":["React","Component","TodoApp","render","LoginComponent","constructor","props","changeHandler","event","setState","target","name","value","loginClicked","state","username","password","login","console","log","CheckLoginSuccess","successcheck"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAA+B;AAE3BE,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAR0B;;AAW/B,MAAMC,cAAN,SAA6BH,SAA7B,CAAsC;AAElCI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAuBlBC,aAvBkB,GAuBDC,KAAD,IAAS;AACrB;AACA;AACA,WAAKC,QAAL,CAAc;AACV,SAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAsBH,KAAK,CAACE,MAAN,CAAaE,KADzB,CAC+B;;AAD/B,OAAd;AAGH,KA7BiB;;AAAA,SA+BlBC,YA/BkB,GA+BH,MAAI;AACf,UAAG,KAAKC,KAAL,CAAWC,QAAX,KAAwB,OAAxB,IAAmC,KAAKD,KAAL,CAAWE,QAAX,KAAwB,KAA9D,EAAoE;AAChE,aAAKP,QAAL,CAAc;AACVQ,UAAAA,KAAK,EAAG;AADE,SAAd;AAGH,OAJD,MAIK;AACD,aAAKR,QAAL,CAAc;AACVQ,UAAAA,KAAK,EAAG;AADE,SAAd;AAGH;;AAEDC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+B,KAAKL,KAAL,CAAWG,KAA1C;AACH,KA3CiB;;AAEd,SAAKH,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAG,OADF;AAETC,MAAAA,QAAQ,EAAG,EAFF;AAGTC,MAAAA,KAAK,EAAG;AAHC,KAAb;AAKH,GATiC,CAWlC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAuBAd,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,iBAAD;AAAmB,MAAA,YAAY,EAAE,KAAKW,KAAL,CAAWG,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEa;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,UAAxB;AAAmC,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,QAArD;AAA+D,MAAA,QAAQ,EAAE,KAAKR,aAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFb,eAGa;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,UAA5B;AAAuC,MAAA,KAAK,EAAE,KAAKO,KAAL,CAAWE,QAAzD;AAAmE,MAAA,QAAQ,EAAE,KAAKT,aAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHb,EAII;AAAQ,MAAA,OAAO,EAAE,KAAKM,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,CADJ;AAQH;;AAvDiC,C,CA0DtC;;;AACA,SAASO,iBAAT,CAA2Bd,KAA3B,EAAiC;AAE7B,MAAGA,KAAK,CAACe,YAAT,EAAsB;AAClBH,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAqCb,KAAK,CAACe,YAA3C;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH,GAHD,MAGK;AACDH,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAqCb,KAAK,CAACe,YAA3C;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACH;AACJ;;AAED,eAAenB,OAAf","sourcesContent":["import React , {Component} from 'react'\r\n\r\nclass TodoApp extends Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"ToDoApp\">\r\n                <LoginComponent/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass LoginComponent extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            username : 'winju',\r\n            password : '',\r\n            login : \"cgfdg\"\r\n        }\r\n    }\r\n\r\n    // usernameChangeHandler = (event)=>{\r\n    //     console.log(event.target.value);\r\n    //     this.setState({\r\n    //         username : event.target.value\r\n    //     })\r\n    // }\r\n\r\n    // passwordChangeHandler = (event)=>{\r\n    //     console.log(event.target.value);\r\n    //     this.setState({\r\n    //         password : event.target.value\r\n    //     })\r\n    // }\r\n\r\n    changeHandler = (event)=>{\r\n        // console.log(this.state);\r\n        // const typeOfField = event.target.name;\r\n        this.setState({\r\n            [event.target.name] : event.target.value // the form element name(event.target.name) should match state elemet name\r\n        })\r\n    }\r\n\r\n    loginClicked = ()=>{\r\n        if(this.state.username === 'winju' && this.state.password === 'abc'){\r\n            this.setState({\r\n                login : true\r\n            })\r\n        }else{\r\n            this.setState({\r\n                login : false\r\n            })\r\n        }\r\n        \r\n        console.log('In loginchecked ',this.state.login);\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <CheckLoginSuccess successcheck={this.state.login} />\r\n                Username:<input type=\"text\" name=\"username\" value={this.state.username} onChange={this.changeHandler}/>\r\n                Password:<input type=\"password\" name=\"password\" value={this.state.password} onChange={this.changeHandler}/>\r\n                <button onClick={this.loginClicked}>Login</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//Functional Component\r\nfunction CheckLoginSuccess(props){\r\n   \r\n    if(props.successcheck){\r\n        console.log('In function component ',props.successcheck);\r\n        return <div>Logging In</div>\r\n    }else{\r\n        console.log('In function component ',props.successcheck);\r\n        return <div>Invalid Credentials</div>\r\n    }\r\n}\r\n\r\nexport default TodoApp;"]},"metadata":{},"sourceType":"module"}